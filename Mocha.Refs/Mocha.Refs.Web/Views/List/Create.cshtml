@using Mocha.Refs.Web.Models.List
@model CreatePageViewModel

@{
    ViewBag.Title = "リスト作成";
}

<h1 class="page-header">リスト作成</h1>

<form name="createListForm" method="post" novalidate>
    @Html.AntiForgeryToken()
    <div class="form-group" ng-class="{'has-error': _submitted && createListForm.title.$invalid}">
        <label for="title">タイトル <span class="required-indicator">*</span></label>
        <input class="form-control" name="title" type="text" placeholder="タイトルを入力"
               ng-model="_input.Title" ng-maxlength="@(WebConsts.MaxRefListTitleLength)" required />
        <span class="help-block" ng-show="_submitted && createListForm.title.$error.required">タイトルを入力してください</span>
        <span class="help-block" ng-show="_submitted && createListForm.title.$error.maxlength">
            @(WebConsts.MaxRefListTitleLength)文字以内で入力してください
        </span>
    </div>
    <div class="form-group" ng-class="{'has-error': _submitted && createListForm.comment.$invalid}">
        <label for="comment">コメント</label>
        <textarea name="comment" class="form-control" rows="4" placeholder="コメントを入力"
                  ng-model="_input.Comment" ng-maxlength="@(WebConsts.MaxRefListCommentLength)"></textarea>
        <span class="help-block" ng-show="_submitted && createListForm.comment.$error.maxlength">
            @(WebConsts.MaxRefListCommentLength)文字以内で入力してください
        </span>
    </div>
    <div class="form-group">
        <label>タグ</label>
        <div data-mc-tag-input="Model.OwnedTagUses" ng-model="_input.TagUses" data-mc-placeholder="タグを入力"></div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" title="作成" ng-click="submit($event, '@Url.Action("Create")', createListForm.$valid)">作成</button>
        <button type="button" class="btn btn-default" title="キャンセル" ng-click="cancel()">キャンセル</button>
    </div>
</form>

@section styles {
}

@section scripts {
    @Scripts.Render("~/bundles/xregexp")
    @Html.Partial("_CreateScripts", Model)
}
