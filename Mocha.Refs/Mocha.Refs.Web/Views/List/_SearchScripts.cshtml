@using Mocha.Refs.Web.Models.List
@model SearchPageViewModel

<script type="text/javascript">
    "use strict";

    var mod = getModule();
    mod.
        directive("mcPagination", mc.angular.PaginationDirective("@Url.Content("~/Content/templates/pagination.html")"));

    function PageController($scope) {
        $scope.Model = [@Html.Raw(Model.ToJson())][0];
        $scope._input = {
            TextSearch: $scope.Model.TextSearch
        };

        $scope.Refs = {};
        $scope.DetailPartView = {};
        $scope.toggleListDetail = getToggleListDetailFunc($scope);

        $scope.search = function (index) {
            $scope._input.TextSearch = mc.util.cutString($scope._input.TextSearch, mc.env.maxTextSearchLength);

            var data = {
                q: $scope._input.TextSearch,
                pageIndex: index
            };
            if (!data.q) {
                data.q = "";
            }

            mc.util.get({
                url: "@Url.Action("SearchRefList")",
                data: data
            }).done(function (result) {
                var data = JSON.parse(result);
                $scope.$apply(function () {
                    $scope.Model.PageIndex = data.PageIndex;
                    $scope.Model.PageCount = data.PageCount;
                    $scope.Model.RefLists = data.RefLists;
                    $("body, html").scrollTop(0);
                });
            });
        };
    }
</script>